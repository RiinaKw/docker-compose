version: "3"

services:
    service_data:
        container_name: container_data
        image: busybox
        volumes:
            - ../project:/project

    # locaolhost:12000 で PHP が動くウェブサーバ
    service_web:
        container_name: container_web
        build:
            context: ./web
            args:
                # 環境変数によってビルドする PHP のバージョンを指定
                PHP_VER: $PHP_VER
        volumes_from:
            - service_data
        ports:
            - 12000:80
        depends_on:
            - service_mysql  # mysql コンテナが起動してから自身を起動させる

    # "docker-compose run --rm service_cli" と打つと独自のコマンドスクリプトが動く
    service_cli:
        container_name: container_cli
        build:
            context: ./cli
            args:
                # 環境変数によってビルドする PHP のバージョンを指定
                PHP_VER: $PHP_VER
        volumes_from:
            - service_data
        entrypoint:
            # コンテナに対して docker run されたら php commandline を起動する
            - php
            - commandline
        environment:
            - LOG_DIR=../logs/commandline  # commandline で利用できる環境変数を設定（今回は実行ログの出力先）
        depends_on:
            - service_mysql  # mysql コンテナが起動してから自身を起動させる

    # "docker-compose run --rm service_composer" と打つとこのコンテナが呼ばれる
    # "service_composer install" のほか、composer.json で定義した phpcs なども呼べる
    service_composer:
        container_name: container_composer
        build:
            context: ./composer
            args:
                # 環境変数によってビルドする PHP のバージョンを指定
                PHP_VER: $PHP_VER
        volumes_from:
            - service_data
        depends_on:
            - service_mysql  # mysql コンテナが起動してから自身を起動させる

    # locaolhost:13306 で MariaDB が動くデータベースサーバ
    service_mysql:
        container_name: container_mysql
        image: mariadb:latest
        restart: on-failure
        env_file: ./mysql/.env  # アプリケーションと関係ない root のパスワードなどはこのファイルに追い出しておく
        volumes:
            - ./mysql/db_data:/var/lib/mysql  # 他のコンテ内には不要なので、ここにしかマウントしない
        environment:
            MYSQL_DATABASE: db_example
            MYSQL_USER: user_example
            MYSQL_PASSWORD: any_password
        ports:
            - 13306:3306  # "mysql -P 13306 -u root -p" と 13306 ポートを指定することで、外部から接続が可能
